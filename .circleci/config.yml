version: 2.1

main: &main
  filters:
    branches:
      only: main

orbs:
  terraform: circleci/terraform@2.0.0

parameters:
  tf_workspace_organization:
    type: string
    default: ryanwholey
    description: The terraform cloud organization
  tf_workspace_dir:
    type: string
    default: /tmp/terraform-workspace
    description: Directory to run terraform from
  tf_workspace_storage_bucket:
    type: string
    default: workspace-configs
    description: s3 bucket for state storage 
  tf_workspace_var_file:
    type: string
    default: project-config.tfvars
    description: tfvars workspace config file
  tf_workspace_secret_workspace:
    type: string
    default: terraform-workspace-manager
    description: Remote repo that outpts a secrets map
  tfe_token:
    type: string
    default: $TFE_TOKEN
    description: TFE token

executors:
  terraform:
    docker:
      - image: hashicorp/terraform:0.14.10

commands:
  terraform-login:
    parameters:
      tfe_token:
        type: string
        description: TFE token
      dest:
        type: string
        description: Destination to store the CLI config
      tf_host:
        type: string
        default: app.terraform.io
        description: Terraform host url
    steps:
      - run: |
          cat \<<EOF > << parameters.dest >> 
            credentials "<< parameters.tf_host >>" { token = "<< parameters.tfe_token >>" }
          EOF

jobs:
  plan-workspace-project:
    executor: terraform
    steps:
      - checkout
      - run: |
          mkdir -p << pipeline.parameters.tf_workspace_dir >>
          mkdir -p "<< pipeline.parameters.tf_workspace_dir >>/modules"
      - run:
          name: Setup terraform project workspace
          command: |
            cat \<<EOF > "<< pipeline.parameters.tf_workspace_dir >>/main.tf"
              data "terraform_remote_state" "secrets" {
                backend = "remote"
                config = {
                  organization = "<< pipeline.parameters.tf_workspace_organization >>"
                  workspaces = {
                    name = "<<pipeline.parameters.tf_workspace_secret_workspace >>"
                  }
                  token = "<< pipeline.parameters.tfe_token >>"
                }
              }
              module "project" {
                source = "github.com/ryanwholey/terraform-workspace-manager//modules/project"

                secrets = data.terraform_remote_state.secrets.outputs.secrets
                config = var.config
              }
              variable "config" {}
              terraform {
                backend "s3" {
                  bucket = "<< pipeline.parameters.tf_workspace_storage_bucket >>"
                  key    = "$CIRCLE_PROJECT_REPONAME.tfstate"
                  region = "us-west-2"
                }
              }
            EOF
      - terraform/plan:
          path: << pipeline.parameters.tf_workspace_dir >>
          var_file: << pipeline.parameters.tf_workspace_dir >>/<< pipeline.parameters.tf_workspace_var_file >>
      - persist_to_workspace:
          root: << pipeline.parameters.tf_workspace_dir >>
          paths:
            - ./*
  apply-workspace-project:
    executor: terraform
    steps:
      - attach_workspace: 
          at: << pipeline.parameters.tf_workspace_dir >>
      - terraform/apply: 
          path: << pipeline.parameters.tf_workspace_dir >>
          var_file: << pipeline.parameters.tf_workspace_dir >>/<< pipeline.parameters.tf_workspace_var_file >>
  plan-resource-project:
    executor: terraform
    steps:
      - checkout
      - terraform-login:
          tfe_token: << pipeline.parameters.tfe_token >> 
          dest: /tmp/cli-config
      - terraform/init:
          path: ./terraform
          cli_config_file: /tmp/cli-config
      - run: 
          name: terraform plan
          command: TF_CLI_CONFIG_FILE=/tmp/cli-config terraform plan ./terraform
  apply-resource-project:
    executor: terraform
    steps:
      - checkout
      - terraform-login:
          tfe_token: << pipeline.parameters.tfe_token >> 
          dest: /tmp/cli-config
      - terraform/apply:
          path: ./terraform
          cli_config_file: /tmp/cli-config
workflows:
  version: 2
  default:
    jobs:
      - plan-workspace-project:
          context:
            - terraform
      - apply-workspace-project:
          context:
            - terraform
          requires:
            - plan-workspace-project
          <<: *main
      - plan-resource-project:
          context:
            - terraform
      - apply-resource-project:
          context:
            - terraform        
          requires:
            - apply-workspace-project
            - plan-resource-project
          <<: *main
